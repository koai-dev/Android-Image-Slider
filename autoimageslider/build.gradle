plugins {
    id 'com.android.library'
    id("maven-publish")
}

group = 'com.koai-dev'
version = '1.4.1'

android {
    namespace "com.smarteist.autoimageslider"
    compileSdk 34

    defaultConfig {
        minSdkVersion 19
        versionCode 5
        versionName "1.3.9"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    buildFeatures {
        buildConfig = true
    }

    publishing {
        singleVariant('release') {
            withSourcesJar()
            withJavadocJar()
        }
    }
    lint {
        abortOnError true
        baseline file('lint-baseline.xml')
    }
}

// Add a new configuration to hold your dependencies
//configurations {
//    libConfig
//}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //noinspection GradleCompatible
    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

}

//task copyLibs(type: Copy) {
//    from configurations.libConfig
//    into 'libs'
//}

//apply from: 'https://raw.githubusercontent.com/smarteist/bintrayUpload/master/install.gradle'
//apply from: 'https://raw.githubusercontent.com/smarteist/bintrayUpload/master/bintray.gradle'

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = 'com.koai-dev'
                artifactId = 'autoimageslider'
                version = '1.4.1'

                afterEvaluate {
                    from components.release
                }
            }
        }
    }
}

task createReleaseTag {
    doLast {
        def tagName = "1.4.1"
        try {
            exec {
                commandLine("git", "tag", "-a", tagName, "-m", "Release tag $tagName")
            }

            exec {
                commandLine("git", "push", "origin", tagName)
            }
        } catch (e) {
            println(e.toString())
        }
    }
}